pipeline {
    agent any
    
    tools { go 'go1.21' }
    
    options {
        timestamps()
        ansiColor("xterm")
        buildDiscarder(logRotator(numToKeepStr: '5', daysToKeepStr: '1', artifactNumToKeepStr: '30'))
    }
    
    // Can change
    environment {
        FMC_HOST="172.16.133.47"
        FMC_USERNAME="admin"
        FMC_PASSWORD="Cisco@123"
        FTD_HOST='172.16.133.48'
        FMC_INSECURE_SKIP_VERIFY='true'
    }
    
    // same as env but immutable
    // parameters {
    // string(name: 'GIT_URL', defaultValue: 'https://github.com/205101-retr0/terraform-provider-fmc-netascode.git/', description: 'project url')
    // }

     stages {
        // To add more stages for the github actions...

        stage('Lint') {
            steps {
                build job: 'Linting Errors', wait: true
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'chmod +x .jenkins/build.sh'
                    sh '.jenkins/build.sh'
                }
            }
           
        }

        // stage('Test') {
        //     steps {
        //         script {
        //             sh 'chmod +x .jenkins/test.sh'
        //             sh '.jenkins/test.sh'
        //         }
        //     } 
        // }
    }
    post {
        success {
            script {
                def commitInfo = sh(script: 'git log -1 --pretty=format:"%h %ae %an"', returnStdout: true).trim()
                def commitDetails = commitInfo.split(' ')

                def commitHash = commitDetails[0]
                def commitEmail = commitDetails[1]
                def commitAuthor = commitDetails[2]

                emailext subject: "Success - Build #$env.BUILD_NUMBER - $env.BUILD_STATUS",
                          body: "The build was successful. You pushed the code. Original pusher: $commitAuthor ($commitEmail)",
                          to: "teja.ind30@gmail.com" 
            }
        }

        always {
            script {
                def commitInfo = sh(script: 'git log -1 --pretty=format:"%h %ae %an"', returnStdout: true).trim()
                def commitDetails = commitInfo.split(' ')

                def commitHash = commitDetails[0]
                def commitEmail = commitDetails[1]
                def commitAuthor = commitDetails[2]

                emailext subject: "Success - Build #${env.BUILD_NUMBER} - ${env.BUILD_STATUS}",
                          body: "The build was successful. You pushed the code. Original pusher: $commitAuthor ($commitEmail)",
                          to: "teande@cisco.com" 
            }
            cleanWs()
        }
    }
}